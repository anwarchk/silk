// This file was generated by counterfeiter
package fakes

import (
	"sync"
)

type SysctlAdapter struct {
	SysctlStub        func(name string, params ...string) (string, error)
	sysctlMutex       sync.RWMutex
	sysctlArgsForCall []struct {
		name   string
		params []string
	}
	sysctlReturns struct {
		result1 string
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *SysctlAdapter) Sysctl(name string, params ...string) (string, error) {
	fake.sysctlMutex.Lock()
	fake.sysctlArgsForCall = append(fake.sysctlArgsForCall, struct {
		name   string
		params []string
	}{name, params})
	fake.recordInvocation("Sysctl", []interface{}{name, params})
	fake.sysctlMutex.Unlock()
	if fake.SysctlStub != nil {
		return fake.SysctlStub(name, params...)
	}
	return fake.sysctlReturns.result1, fake.sysctlReturns.result2
}

func (fake *SysctlAdapter) SysctlCallCount() int {
	fake.sysctlMutex.RLock()
	defer fake.sysctlMutex.RUnlock()
	return len(fake.sysctlArgsForCall)
}

func (fake *SysctlAdapter) SysctlArgsForCall(i int) (string, []string) {
	fake.sysctlMutex.RLock()
	defer fake.sysctlMutex.RUnlock()
	return fake.sysctlArgsForCall[i].name, fake.sysctlArgsForCall[i].params
}

func (fake *SysctlAdapter) SysctlReturns(result1 string, result2 error) {
	fake.SysctlStub = nil
	fake.sysctlReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

func (fake *SysctlAdapter) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.sysctlMutex.RLock()
	defer fake.sysctlMutex.RUnlock()
	return fake.invocations
}

func (fake *SysctlAdapter) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}
